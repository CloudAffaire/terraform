##------------------------
##  Terraform: Refresh  ##
##------------------------
## Create a directory and get inside it
mkdir terraform && cd terraform

## Create resources
vi main.tf
------------------
#creates a vpc
provider "aws" {
access_key = "<your_access_key>"
secret_key = "<your_secret_key>"
region = "ap-south-1"
}
resource "aws_vpc" "myvpc" {
cidr_block = "10.0.0.0/16"
enable_dns_hostnames = true
tags {
Name = "myvpc"
}
}
------------------
:wq

## Format code
terraform fmt

## Initialize terraform
terraform init

## Create the resource
terraform apply

## Show state
terraform show

#login to aws console and change myvpc tag to mynewvpc

## Refresh the state
## terraform plan\apply\destroy also does a refresh
terraform refresh

## Show state (tags.Name changed from myvpc to mynewvpc)
terraform show

## Plan the change (matches main.tf with terraform.tfstate and output changes that will be applied)
#tags.Name: "mynewvpc" => "myvpc"
terraform plan

## Apply the change
terraform apply

## Show state (tags.Name changed from mynewvpc to myvpc again)
terraform show

## Cleanup
terraform destroy -auto-approve
cd && rm -r terraform
